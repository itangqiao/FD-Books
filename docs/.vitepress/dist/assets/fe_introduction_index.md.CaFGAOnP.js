import{_ as i,c as l,o as a,a4 as e}from"./chunks/framework.axffzhAD.js";const f=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"fe/introduction/index.md","filePath":"fe/introduction/index.md"}'),t={name:"fe/introduction/index.md"},r=e('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><h2 id="前端入门-起源" tabindex="-1">前端入门 - 起源 <a class="header-anchor" href="#前端入门-起源" aria-label="Permalink to &quot;前端入门 - 起源&quot;">​</a></h2><ul><li><a href="./web.html">Web 发展</a></li><li>浏览器 &amp; JavaScript 结合</li><li>PHP 世界上最好的语言</li><li>JSP <a href="https://www.modb.pro/db/96250" target="_blank" rel="noreferrer"></a></li><li>Ajax 大幅提升用户体验</li><li>JQuery 大幅开发速度</li><li>Nodejs 开启模块化</li><li>Angular &amp; React &amp; Vue</li><li>Svelte 拒绝虚拟DOM</li></ul><h2 id="组件相关" tabindex="-1">组件相关 <a class="header-anchor" href="#组件相关" aria-label="Permalink to &quot;组件相关&quot;">​</a></h2><ul><li><a href="./组件封装原则.html">组件封装原则</a></li><li><a href="./Vue组件的几种设计方式.html">Vue组件的几种设计方式</a></li><li><a href="./组件传值.html">组件传值</a></li><li>二次封装Axios</li><li>二次封装常用组件</li></ul><h2 id="前端工程化" tabindex="-1">前端工程化 <a class="header-anchor" href="#前端工程化" aria-label="Permalink to &quot;前端工程化&quot;">​</a></h2><ul><li><a href="./../engineering/base.html">基础框架</a></li><li>Vite</li><li>项目插件</li><li>CI/CD</li><li>Nginx</li><li>Docker</li></ul><h2 id="typescript" tabindex="-1">TypeScript <a class="header-anchor" href="#typescript" aria-label="Permalink to &quot;TypeScript&quot;">​</a></h2><ul><li>基础语法</li><li>类型推论</li></ul><h2 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h2><ul><li>单元测试</li></ul><h2 id="宿主环境" tabindex="-1">宿主环境 <a class="header-anchor" href="#宿主环境" aria-label="Permalink to &quot;宿主环境&quot;">​</a></h2><ul><li>浏览器</li><li>Nodejs</li></ul><h2 id="函数式编程" tabindex="-1">函数式编程 <a class="header-anchor" href="#函数式编程" aria-label="Permalink to &quot;函数式编程&quot;">​</a></h2><ul><li>纯函数</li><li>高阶函数</li><li>组合函数</li><li>柯里化</li><li>偏函数</li></ul><h2 id="后台管理系统" tabindex="-1">后台管理系统 <a class="header-anchor" href="#后台管理系统" aria-label="Permalink to &quot;后台管理系统&quot;">​</a></h2><ul><li>业务难点</li><li>RBAC</li><li>动态路由</li><li>按钮权限</li></ul><h2 id="移动端适配" tabindex="-1">移动端适配 <a class="header-anchor" href="#移动端适配" aria-label="Permalink to &quot;移动端适配&quot;">​</a></h2><ul><li>响应式布局</li></ul><h2 id="ssr" tabindex="-1">SSR <a class="header-anchor" href="#ssr" aria-label="Permalink to &quot;SSR&quot;">​</a></h2><ul><li>Nuxt.js</li><li>Next.js</li></ul><h2 id="全栈" tabindex="-1">全栈 <a class="header-anchor" href="#全栈" aria-label="Permalink to &quot;全栈&quot;">​</a></h2><ul><li>Nestjs</li><li>TRPC</li><li>Prisma / drizzle</li><li>PGSql / Mongodb</li><li>Redis</li><li>缓存</li><li>日志</li><li>监控</li><li>测试</li><li>压力测试</li><li>部署</li></ul><h2 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;Git&quot;">​</a></h2><ul><li>Git 命令</li><li>Git 问题处理</li></ul>',25),o=[r];function n(h,d,u,s,c,b){return a(),l("div",null,o)}const _=i(t,[["render",n]]);export{f as __pageData,_ as default};
