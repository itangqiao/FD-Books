import{_ as e,c as a,o as i,a4 as l}from"./chunks/framework.axffzhAD.js";const m=JSON.parse('{"title":"Vue组件的几种设计方式","description":"","frontmatter":{},"headers":[],"relativePath":"fe/introduction/Vue组件的几种设计方式.md","filePath":"fe/introduction/Vue组件的几种设计方式.md"}'),t={name:"fe/introduction/Vue组件的几种设计方式.md"},o=l('<h1 id="vue组件的几种设计方式" tabindex="-1">Vue组件的几种设计方式 <a class="header-anchor" href="#vue组件的几种设计方式" aria-label="Permalink to &quot;Vue组件的几种设计方式&quot;">​</a></h1><h2 id="热门" tabindex="-1">热门 <a class="header-anchor" href="#热门" aria-label="Permalink to &quot;热门&quot;">​</a></h2><ul><li>Components 常规 SPA 组件</li><li>[[Hooks]] 组合式函数 <ul><li>侧重于有状态的逻辑</li></ul></li><li>[[directive]] 自定义指令 <ul><li>重用涉及普通元素的底层 DOM 访问的逻辑</li></ul></li><li>[[TSX]] <ul><li>组件颗粒度拆的更细</li><li>template 模板语法无法满足的时候</li></ul></li><li>[[命令式组件]] 命令式调用组件, 而不是通过视图调用</li></ul><h2 id="废弃" tabindex="-1">废弃 <a class="header-anchor" href="#废弃" aria-label="Permalink to &quot;废弃&quot;">​</a></h2><p>Vue2</p><ul><li><code>render() &amp;&amp; h()</code> vue2 的进阶组件封装方式, 更灵活, 更强大</li><li><code>functional</code> vue2 函数式组件, 用于性能优化</li></ul>',6),r=[o];function n(u,_,c,d,s,h){return i(),a("div",null,r)}const f=e(t,[["render",n]]);export{m as __pageData,f as default};
